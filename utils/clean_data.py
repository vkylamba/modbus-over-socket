

def clean_received_data(data):
    new_data = ''

    start_idx = None
    count = 0
    min_count = 5
    add_this_char = False
    for idx, x in enumerate(data):
        if x == u'\x00':
            if start_idx is None:
                start_idx = idx
            count += 1

            if count < min_count:
                add_this_char = True

        else:
            add_this_char = True

        if add_this_char:
            new_data += x

        add_this_char = False

    return new_data


if __name__ == "__main__":
    datac:5c:02:00:00:00:00:00:04:00:e8:03:88:13:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:01:01:00:6c:00:00:00:00:00:00:00:18:01:00:01:00:70:00:02:02:00:00:00:00:00:00:00:00:00:e1:00:00:00:00:00:00:00:ca:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:80:79:cc:5c:02:00:00:00:00:00:04:00:e8:03:88:13:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:01:01:00:6c:00:00:00:00:00:00:00:cd:00:00:02:00:70:00:02:02:00:00:00:00:00:00:00:00:00:e1:00:00:00:00:00:00:00:ca:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:80:79:c

    print("HEX data: ", data)
    # data = "".join(chr(int(x, 16)) for x in data.split(':'))
    # print("data", len(data), data)
    # clean_data = clean_received_data
    clean_data = data.replace("00:00:00", "")
    print("clean_data", len(clean_data), clean_data)
    # clean_hex_data = {":".join("{:02x}".format(ord(c)) for c in clean_data)}
    # print("HEX", clean_hex_data)
